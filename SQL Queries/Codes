--What are the names of all the shops?

SELECT COUNT([ShopID]) TotalShopsCount
FROM [Retail Management].[dbo].[Shops]

--How many shops were established in Sydney?
select Count(*) SydneyShopsCount
from [Shops]
WHERE [Location] = 'Sydney'


--List the shops established before the year 2010.

SELECT COUNT(*) Befor2010StablishedShop
from [Shops]
WHERE [EstablishedYear] > '2010'

  --What is the average price of all products

  SELECT AVG(Price) AS AveragePrice
  FROM [Product];

  --Which product has the highest price?
 SELECT [Price]  ,[ProductName]
 FROM [Product]
 WHERE [Price] = (
 SELECT MAX(Price) AS HighestProductName  
  FROM [Product])



  --GROUP BY [ProductName]
  SELECT TOP 1 [ProductName], Price
FROM [Product]
ORDER BY Price DESC ;

--How many products are there in the "Electronics" category?
SELECT COUNT(*) AS ElectroProductCount
FROM [Product]
WHERE [Category] = 'Electronics'


--List products with a stock quantity of less than 20.

SELECT COUNT(*) AS CountOfCoantityLess20
FROM [Product]
WHERE [StockQuantity] > 20

--Find the product with the lowest ProductID.
SELECT TOP 1 [ProductID]
FROM [Product]
ORDER BY [ProductID] ASC

SELECT [ProductID]
FROM [Product]
WHERE [ProductID] = (SELECT MIN([ProductID]) FROM [Product])

--How many customers have the last name "Smith"?

SELECT COUNT(*) LastNameNount
FROM [Customers]
WHERE [LastName] = 'Smith'

--List all customers with email addresses containing "example.com."

SELECT COUNT(*)
FROM [Customers]
WHERE [Email] LIKE '%example.com%';


--What is the phone number of the customer with CustomerID 5?
SELECT [PhoneNumber] , [CustomerID]
FROM [Customers]
WHERE [CustomerID] = '5'


--Find the total revenue generated by each shop in 2021.

SELECT SH.[ShopName] ,
        SUM(P.[Price] * S.[Quantity]) AS salesTotalAmount
from [Shops] AS SH
JOIN [Sales] AS S  on SH.[ShopID] = S.[ShopID]
JOIN   [Product] AS P ON  S.[ProductID] = P.[ProductID]
WHERE  S.[SaleDate] >= '2021-01-01' AND S.[SaleDate] < '2022-01-01'
 GROUP BY
    SH.[ShopName]
ORDER BY salesTotalAmount DESC

--Create a view that shows the total quantity sold for each product in BETWEEN 2018 AND 2020.
CREATE VIEW TotalQuantitySold1 AS
SELECT  SUM([Quantity]) AS TotalQuantity,
           P.[Category],
S.[SaleDate]
    FROM [Sales] AS S
JOIN [Product] AS P ON S.[ProductID] = P.[ProductID]
WHERE S.[SaleDate] <= '2020-1-1' AND S.[SaleDate] > '2018-1-1'
GROUP BY P.[Category] ,S.[SaleDate]




--Calculate the average price of products sold in each shop and display the results alongside shop details.

SELECT
    AVG(P.[Price]) AS AveragePrice,
    SH.[ShopName],
    SH.[ShopID],
    SH.[Location],
    SH.[EstablishedYear],
    SH.[ShopType],
    S.[SaleDate]
FROM
    [Shops] AS SH
JOIN
    [Sales] AS S ON SH.[ShopID] = S.[ShopID]
JOIN
    [Product] AS P ON S.[ProductID] = P.[ProductID]
GROUP BY
    SH.[ShopName],
    SH.[ShopID],
    SH.[Location],
    SH.[EstablishedYear],
    SH.[ShopType],
    S.[SaleDate];

--Create a view that shows the total sales revenue for each month in 2021.
CREATE VIEW TotalSalesRevenue1 AS
SELECT
      SUM(S.[Quantity] * P.[Price]) AS SALESREVENUE,
 MONTH(S.[SaleDate]) AS MONTH
FROM
     [Sales] AS S
JOIN
     [Product] AS P ON  P.[ProductID] = S.[ProductID]
WHERE
YEAR(S.[SaleDate]) = 2021
GROUP BY
     MONTH([SaleDate]) ,YEAR(S.[SaleDate] );
     
    --Find the customers who have not made any purchases in 2021.



SELECT
    C.[CustomerID],
    [FirstName]
      ,[LastName]
FROM
    [Customers] AS C
WHERE
    C.[CustomerID] NOT IN (
SELECT DISTINCT
    S.[CustomerID]
FROM
    [Sales] AS S
WHERE
    YEAR(S.[SaleDate]) = 2021);

--Calculate the total revenue for each product category in 2022 and rank them from highest to lowest revenue


WITH CategoryRevenue AS (
    SELECT
        P.[Category],
        SUM([Quantity] * [Price]) AS TotalRevenue
    FROM
        [Sales] AS S
    JOIN
        [Product] AS P ON S.[ProductID] = P.[ProductID]
    WHERE
        YEAR(S.[SaleDate]) = 2022
    GROUP BY
        P.[Category]
)

SELECT
    [Category],
    TotalRevenue,
    RANK() OVER (ORDER BY TotalRevenue DESC) AS CategoryRank
FROM
    CategoryRevenue
ORDER BY
    TotalRevenue DESC;


--Customer Analysis: Retrieve the top 5 customers who spent the most on purchases in 2021.

WITH CustomerSpending AS (
    SELECT
        C.CustomerID,
        SUM(S.Quantity * P.Price) AS TotalSpent
    FROM
        Customers AS C
    JOIN
        Sales AS S ON C.CustomerID = S.CustomerID
    JOIN
        Product AS P ON S.ProductID = P.ProductID
    WHERE
        YEAR(S.SaleDate) = 2021
    GROUP BY
        C.CustomerID
)
SELECT TOP 5
    C.CustomerID,
    C.FirstName,
    C.LastName
FROM
    Customers AS C
JOIN
    CustomerSpending AS CS ON C.CustomerID = CS.CustomerID
ORDER BY
    CS.TotalSpent DESC;


--Product Popularity: Find the top 3 most popular products (highest total quantity sold) in 2022.

SELECT
      TOP 3 P.[ProductID] ,MAX(S.[Quantity]) AS MOSTSOLD
FROM
    [Product] AS P
JOIN
     [Sales] AS S ON P.[ProductID] = S. [ProductID]
WHERE
     YEAR(S.[SaleDate]) = '2022'
GROUP BY
        P.[ProductID]
ORDER BY
         MOSTSOLD DESC


--Calculate the total sales revenue for each month in 2022 and display it in ascending order of months.
SELECT
     SUM([Price] * [Quantity]) TOTALREVENUE ,CONCAT(YEAR([SaleDate]), '-' , MONTH([SaleDate])) AS MONTHYEAR
FROM
      Customers AS C
JOIN
      Sales AS S ON C.CustomerID = S.CustomerID
JOIN
      Product AS P ON S.ProductID = P.ProductID
WHERE
      YEAR([SaleDate] ) = '2022'
GROUP BY
      CONCAT(YEAR([SaleDate]), '-' , MONTH([SaleDate]))
ORDER BY
          MONTHYEAR ASC




-- Retrieve the product category that generated the highest revenue in

SELECT
       SUM(P.[Price] * S.[Quantity]) AS TOTALREVENUE  ,P.[Category]
FROM
      Customers AS C
JOIN
      Sales AS S ON C.CustomerID = S.CustomerID
JOIN
      Product AS P ON S.ProductID = P.ProductID
GROUP BY
         P.[Category]
ORDER BY
       TOTALREVENUE DESC


  -- Identify the shop that had the lowest average product price in 2021.
WITH SHOPAVGPRICE AS(
SELECT
       AVG(P.[Price]) AS  AVGPRODUCTPRICE , SH.[ShopName] , SH.[ShopID]
FROM
      [Shops] AS SH
JOIN
      Sales AS S ON SH.[ShopID]= S.[ShopID]
JOIN
      Product AS P ON S.ProductID = P.ProductID
WHERE
     YEAR([SaleDate]) = '2021'
GROUP BY
        SH.[ShopName] , SH.[ShopID]
)
SELECT
      [ShopName] ,[ShopID] , AVGPRODUCTPRICE
FROM
    SHOPAVGPRICE
WHERE
    AVGPRODUCTPRICE = ( SELECT MIN(AVGPRODUCTPRICE) FROM SHOPAVGPRICE );


-- Calculate the average number of purchases made by customers in 2021.
SELECT
    AVG(PurchaseCount) AS AVGTOTALPURCHASE
FROM (
    SELECT
        C.[CustomerID],
        COUNT(*) AS PurchaseCount
    FROM
        [Sales] AS S
    JOIN
        [Customers] AS C ON S.CustomerID = C.CustomerID
    WHERE
        YEAR(S.[SaleDate]) = 2021
    GROUP BY
        C.[CustomerID]
) AS CustomerPurchaseCounts;



 --Find customers who made purchases in eather 2021 and 2022.
  SELECT
         C.[CustomerID]
      ,[FirstName]
 ,[LastName]
FROM
     [Customers] AS C
JOIN
[Sales] AS S ON S.CustomerID = C.CustomerID
WHERE
YEAR([SaleDate]) IN ('2021' , '2022')
GROUP BY
  C.[CustomerID]
  ,[FirstName]
 ,[LastName]

  --Find customers who made purchases in both 2021 and 2022.
   
SELECT
    C.[CustomerID],
    [FirstName],
    [LastName]
FROM
    [Customers] AS C
WHERE
    C.[CustomerID] IN (
        SELECT DISTINCT S.CustomerID
        FROM [Sales] AS S
        WHERE YEAR([SaleDate]) = '2021'
    )
    AND
    C.[CustomerID] IN (
        SELECT DISTINCT S.CustomerID
        FROM [Sales] AS S
        WHERE YEAR([SaleDate]) = '2022'
    );


--Calculate the percentage growth in total revenue from 2021 to 2022.


WITH Revenue2021 AS (
    SELECT
        SUM(P.[Price] * S.[Quantity]) AS TotalRevenue2021
    FROM
        [Sales] AS S
JOIN
    [Product] AS P ON  S.[ProductID] = P.[ProductID]
    WHERE
        YEAR([SaleDate]) = '2021'
),
Revenue2022 AS (
    SELECT
        SUM(P.[Price] * S.[Quantity]) AS TotalRevenue2022
      FROM
        [Sales] AS S
JOIN
    [Product] AS P ON S.[ProductID] = P.[ProductID]
    WHERE
        YEAR([SaleDate]) = '2022'
)
SELECT
    (Revenue2022.TotalRevenue2022 - Revenue2021.TotalRevenue2021) / Revenue2021.TotalRevenue2021 * 100 AS PercentageGrowth
FROM
    Revenue2021, Revenue2022;


--Identify the top 3 best-selling products based on the quantity sold in the year 2022.
SELECT
 TOP 3 P.[ProductID] , [Quantity] ,[ProductName],
 SUM(S.[Quantity]) AS TotalQuantitySold
FROM
[Product] AS P
JOIN
[Sales] AS S ON S.ProductID = P.ProductID
WHERE
YEAR([SaleDate]) = '2022'
GROUP BY
P.[ProductID] , [Quantity] ,[ProductName]
ORDER BY
   TotalQuantitySold DESC


--Calculate the average number of days between consecutive purchases for each customer.

SELECT
      C.[CustomerID],
 ([SaleDate])
FROM
    [Sales] AS S
JOIN
    [Customers] AS C ON C.[CustomerID] = S.[CustomerID]
WHERE
     DAYS([SaleDate])
GROUP BY
          C.[CustomerID] ,([SaleDate])
